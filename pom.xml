<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.perf4j</groupId>
    <artifactId>perf4j</artifactId>
    <version>0.9.17-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Perf4J</name>
    <description>Performance statistics logging and monitoring toolkit extension to log4j, logback and the java.util.logging framework.</description>
    <url>http://www.perf4j.org</url>
    <inceptionYear>2008</inceptionYear>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>LICENSE.txt</url>
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <organization>
        <name>perf4j.org</name>
        <url>http://www.perf4j.org</url>
    </organization>

    <ciManagement>
        <system>TeamCity</system>
        <url>http://managed.on.a.private.build.server</url>
    </ciManagement>

    <mailingLists>
        <mailingList>
            <name>Perf4j Users</name>
            <post>user@perf4j.codehaus.org</post>
            <subscribe>http://xircles.codehaus.org/lists/user@perf4j.codehaus.org/subscribe</subscribe>
            <unsubscribe>http://xircles.codehaus.org/lists/user@perf4j.codehaus.org/unsubscribe</unsubscribe>
            <archive>http://markmail.org/search/list:org.codehaus.perf4j.user</archive>
        </mailingList>
        <mailingList>
            <name>Perf4j Dev</name>
            <post>dev@perf4j.codehaus.org</post>
            <subscribe>http://xircles.codehaus.org/lists/dev@perf4j.codehaus.org/subscribe</subscribe>
            <unsubscribe>http://xircles.codehaus.org/lists/dev@perf4j.codehaus.org/unsubscribe</unsubscribe>
            <archive>http://markmail.org/search/list:org.codehaus.perf4j.dev</archive>
        </mailingList>
        <mailingList>
            <name>Perf4j SCM</name>
            <post>scm@perf4j.codehaus.org</post>
            <subscribe>http://xircles.codehaus.org/lists/scm@perf4j.codehaus.org/subscribe</subscribe>
            <unsubscribe>http://xircles.codehaus.org/lists/scm@perf4j.codehaus.org/unsubscribe</unsubscribe>
            <archive>http://markmail.org/search/list:org.codehaus.perf4j.scm</archive>
        </mailingList>
        <mailingList>
            <name>Perf4j Announce</name>
            <post>announce@perf4j.codehaus.org</post>
            <subscribe>http://xircles.codehaus.org/lists/announce@perf4j.codehaus.org/subscribe</subscribe>
            <unsubscribe>http://xircles.codehaus.org/lists/announce@perf4j.codehaus.org/unsubscribe</unsubscribe>
            <archive>http://markmail.org/search/list:org.codehaus.perf4j.announce</archive>
        </mailingList>
    </mailingLists>

    <issueManagement>
        <system>JIRA</system>
        <url>http://jira.codehaus.org/browse/PERFFORJ</url>
    </issueManagement>

    <developers>
        <developer>
            <id>adevine</id>
            <name>Alex Devine</name>
            <email>adevine@perf4j.org</email>
            <organization>perf4j.org</organization>
            <timezone>-6</timezone>
            <roles>
                <role>despot</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>dchakraborty</id>
            <name>Doran Chakraborty</name>
            <email>dchakraborty@perf4j.org</email>
            <organization>perf4j.org</organization>
            <timezone>-6</timezone>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>cberry</id>
            <name>Chris Berry</name>
            <email>chris@perf4j.org</email>
            <organization>perf4j.org</organization>
            <timezone>-6</timezone>
            <roles>
                <role>despot</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>bjacob</id>
            <name>Bryon Jacob</name>
            <email>bryon@perf4j.org</email>
            <organization>perf4j.org</organization>
            <timezone>-6</timezone>
            <roles>
                <role>despot</role>
                <role>developer</role>
            </roles>
        </developer>
        <developer>
            <id>alexvictoria</id>
            <name>Alex Victoria</name>
            <email>alexv@perf4j.org</email>
            <organization>perf4j.org</organization>
            <timezone>-6</timezone>
            <roles>
                <role>developer</role>
            </roles>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Patrick Moore</name>
            <url>http://www.sworddance.com/blog/</url>
        </contributor>
        <contributor>
            <name>Nicholas Whitehead</name>
            <url>https://helios.dev.java.net/</url>
        </contributor>
        <contributor>
            <name>Xu Huisheng</name>
        </contributor>
        <contributor>
            <name>Thomas Buckel</name>
        </contributor>
    </contributors>

    <scm>
        <url>http://github.com/perf4j/perf4j</url>
        <connection>scm:git:git://github.com/perf4j/perf4j.git</connection>
        <developerConnection>scm:git:git://github.com/perf4j/perf4j.git</developerConnection>
    </scm>

    <repositories>
        <repository>
            <id>Apache iBiblio Mirror</id>
            <url>https://people.apache.org/repo/m2-ibiblio-rsync-repository/</url>
        </repository>
        <repository>
            <id>Maven2</id>
            <url>https://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>Codehaus</id>
            <url>https://repository.codehaus.org/</url>
        </repository>
        <repository>
            <id>Apache Incubator</id>
            <url>https://people.apache.org/repo/m2-incubating-repository/</url>
        </repository>
        <repository>
            <id>java.net</id>
            <url>https://download.java.net/maven/2/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>Codehaus</id>
            <url>https://repository.codehaus.org/</url>
        </pluginRepository>
        <pluginRepository>
            <id>Codehaus Mojo</id>
            <url>https://repository.codehaus.org/org/codehaus/mojo/</url>
        </pluginRepository>
        <pluginRepository>
            <id>Codehaus Snapshots</id>
            <url>https://snapshots.repository.codehaus.org/</url>
        </pluginRepository>
        <pluginRepository>
            <id>Maven2</id>
            <url>https://repo1.maven.org/maven2/</url>
        </pluginRepository>
        <pluginRepository>
            <id>maven snapshots</id>
            <url>https://people.apache.org/repo/m2-snapshot-repository/</url>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <!-- this property is used by the apt files in src/site/apt -->
        <currentProductionVersion>0.9.16</currentProductionVersion>
        <currentSnapshotVersion>0.9.17-SNAPSHOT</currentSnapshotVersion>
        <git.executable>git</git.executable>
        <aspectjVersion>1.6.11</aspectjVersion>
    </properties>

    <profiles>
        <profile>
            <id>Windows</id>
            <activation>
                <os>
                    <family>Windows</family>
                </os>
            </activation>
            <properties>
                <git.executable>git.cmd</git.executable>
            </properties>
        </profile>
        <profile>
            <id>ajc</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>aspectj-maven-plugin</artifactId>
                        <version>1.4</version>
                        <dependencies>
                            <dependency>
                                <groupId>org.aspectj</groupId>
                                <artifactId>aspectjtools</artifactId>
                                <version>${aspectjVersion}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                                <source>1.5</source>
                                <target>1.5</target>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>compile</goal>       <!-- use this goal to weave all your main classes -->
                                    <goal>test-compile</goal>  <!-- use this goal to weave all your test classes -->
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <!-- if you use the log4j implementation of perf4j, you must also include this dependency -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- if you use the commons logging code (in the commonslog package), you must also include this dependency -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.0.3</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- if you use the slf4j logging code, you must also include this dependency -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.5.6</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- if you use logback as slf4j impl, you must also include this dependency -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>0.9.15</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- If you use the graphing servlets of perf4j, the servlet package should be provided by your container -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
            <scope>provided</scope>
        </dependency>

        <!-- if you use the Aspect-J based AOP functionality, you must also include these following dependencies -->
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>${aspectjVersion}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>${aspectjVersion}</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>commons-jexl</groupId>
            <artifactId>commons-jexl</artifactId>
            <version>1.1</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!--
            if you use EJB Interceptors, you DON'T need to include the following dependency as the required
            classes shouldcome with your Java EE server
        -->
        <dependency>
            <groupId>javax.ejb</groupId>
            <artifactId>ejb-api</artifactId>
            <version>3.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- if you use Spring to manage the AOP funcionality, you must also include these following dependencies -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.0.6</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>2.1_3</version>
            <scope>compile</scope>
            <optional>true</optional>
        </dependency>

        <!-- The following dependencies are required for testing only -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-mock</artifactId>
            <version>2.0.6</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.3.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Tell Maven to compile for Java 1.5 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>

            <!-- need to use later version of release plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.2.1</version>
            </plugin>

            <!-- When deploying tell Maven not to create unique binaries for each snapshot -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
                <inherited>true</inherited>
                <configuration>
                    <uniqueVersion>false</uniqueVersion>
                </configuration>
            </plugin>

            <!-- Set up code coverage -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>emma-maven-plugin</artifactId>
                <version>1.0-alpha-1</version>
                <inherited>true</inherited>
            </plugin>

            <!-- Genearate a javadoc jar when deploying -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.1</version>
                <inherited>true</inherited>
                <configuration>
                    <links>
                        <link>http://java.sun.com/j2se/1.5.0/docs/api</link>
                        <link>http://logging.apache.org/log4j/1.2/apidocs</link>
                        <link>http://commons.apache.org/logging/apidocs</link>
                        <link>http://www.slf4j.org/api</link>
                    </links>
                    <charset>UTF-8</charset>
                </configuration>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Generate a jar containing the source files when deploying -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Tell maven to generate a version.properties files from SVN -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>

                    <execution>
                        <id>build-versions-file</id>
                        <phase>compile</phase>
                        <inherited>false</inherited>
                        <configuration>
                            <tasks>
                                <mkdir dir="${project.build.directory}" />
                                <exec executable="${git.executable}" output="${project.build.directory}/version.properties">
                                    <arg value="log" />
                                    <arg value="-1" />
                                    <arg value="--pretty=perf4j.revision=%H" />
                                </exec>
                                <echo file="${project.build.directory}/version.properties" append="true">
                                    perf4j.version=${project.version}
                                </echo>
                                <fixcrlf srcdir="${project.build.directory}" eol="lf" includes="version.properties" />
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
              Tell the Maven jar plugin to generate multiple jars: one with all the files, then ones that JUST contain
              the particular logging framework extensions (e.g. log4j, java.util.logging, commons logging or slf4j).
              These separate log4j, javalog, commonslog and slf4j jars are needed when using the AspectJ compiler so
              that only ONE TimingAspect is included.

              Also, tell the jar plugin to make org.per4j.LogParser the main executable class.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.2</version>
                <!--
                  The main jar includes all classes and generates a META-INF manifest file that species
                  LogParser as the jar's main class
                -->
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <mainClass>org.perf4j.LogParser</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <!-- This jar includes only the log4j classes and NOT the other logging framework classes -->
                    <execution>
                        <id>log4jAspects</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>log4jonly</classifier>
                            <excludes>
                                <exclude>**/javalog/**</exclude>
                                <exclude>**/commonslog/**</exclude>
                                <exclude>**/slf4j/**</exclude>
                                <exclude>**/logback/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <!-- This jar includes only the java.util.logging classes and NOT the other logging frameworks -->
                    <execution>
                        <id>javalogAspects</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>javalogonly</classifier>
                            <excludes>
                                <exclude>**/log4j/**</exclude>
                                <exclude>**/commonslog/**</exclude>
                                <exclude>**/slf4j/**</exclude>
                                <exclude>**/logback/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <!-- This jar includes only the commonslog classes and NOT the other logging framework classes -->
                    <execution>
                        <id>commonslogAspects</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>commonslogonly</classifier>
                            <excludes>
                                <exclude>**/log4j/**</exclude>
                                <exclude>**/javalog/**</exclude>
                                <exclude>**/slf4j/**</exclude>
                                <exclude>**/logback/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <!-- This jar includes only the slf4j classes and NOT the other logging framework classes -->
                    <execution>
                        <id>slf4jAspects</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>slf4jonly</classifier>
                            <excludes>
                                <exclude>**/log4j/**</exclude>
                                <exclude>**/javalog/**</exclude>
                                <exclude>**/commonslog/**</exclude>
                                <exclude>**/logback/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                    <!-- This jar includes the slf4j and logback classes and NOT the other logging framework classes -->
                    <execution>
                        <id>logbackAspects</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classifier>logbackonly</classifier>
                            <excludes>
                                <exclude>**/log4j/**</exclude>
                                <exclude>**/javalog/**</exclude>
                                <exclude>**/commonslog/**</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Tell surefire which tests to run, and to fork once when running, and set system properties. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.3</version>
                <inherited>true</inherited>
                <configuration>
                    <forkMode>once</forkMode>
                    <reportFormat>plain</reportFormat>
                    <trimStackTrace>false</trimStackTrace>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <argLine>-javaagent:${settings.localRepository}/org/aspectj/aspectjweaver/${aspectjVersion}/aspectjweaver-${aspectjVersion}.jar</argLine>
                    <systemProperties>
                        <property>
                            <name>log4j.debug</name>
                            <value>false</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>

            <!-- For the the perf4j site generation, tack the site plugin to 3.0 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.0</version>
            </plugin>
        </plugins>

        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav</artifactId>
                <version>1.0-beta-2</version>
            </extension>
        </extensions>

    </build>

    <reporting>
        <plugins>
            <!-- Add the javadoc to the reporting section in the maven site -->
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <attach>true</attach>
                    <links>
                        <link>http://java.sun.com/j2se/1.5.0/docs/api</link>
                        <link>http://logging.apache.org/log4j/1.2/apidocs</link>
                        <link>http://commons.apache.org/logging/apidocs</link>
                        <link>http://www.slf4j.org/api</link>
                    </links>
                </configuration>
                <inherited>true</inherited>
            </plugin>

            <!-- Add the code coverage reports to the site -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>emma-maven-plugin</artifactId>
                <version>1.0-alpha-1</version>
            </plugin>

            <!-- Add the test results to the site -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <argLine>-Xmx512m</argLine>
                </configuration>
            </plugin>

            <!-- Create a javadoc-style source reference on the site -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
        </plugins>
    </reporting>

    <distributionManagement>

        <repository>
            <id>codehaus.org</id>
            <name>Perf4j Repository</name>
            <url>dav:https://dav.codehaus.org/repository/perf4j/</url>
        </repository>

        <snapshotRepository>
            <id>codehaus.org</id>
            <uniqueVersion>false</uniqueVersion>
            <name>Perf4j Snapshot Repository</name>
            <url>dav:https://dav.codehaus.org/snapshots.repository/perf4j/</url>
        </snapshotRepository>

        <site>
            <id>codehaus.org</id>
            <url>dav:https://dav.codehaus.org/perf4j/</url>
        </site>

        <downloadUrl>
            http://repository.codehaus.org/org/perf4j/perf4j/
        </downloadUrl>

    </distributionManagement>

</project>
